-- noinspection SqlNoDataSourceInspectionForFile
/*
   Setup SQL tables
 */
create table player (
    uuid char(36),
    username varchar (32),
    balance int,
    killstreak int,
    playtime int,
    cursed bit,
    chatToggledOn bit,
    primary key (uuid)
);
create table log (
    uuid     char(36),
    log_time char (19),
    log_type varchar (6),
    world    varchar (16),
    x_pos    int,
    y_pos    int,
    z_pos    int,
    primary key (uuid, log_time, log_type),
    foreign key (uuid) references player (uuid)
);
create table dungeon_attempts (
    uuid          char (36),
    dungeon_name  varchar (16),
    timestamp     char (19),
    difficult     int,
    won           bit,
    alive         bit,
    primary key (uuid, dungeon_name, timestamp),
    foreign key (uuid) references player (uuid)
);
create table npc (
    npc_id  int,
    name    varchar (32),
    x_pos   int,
    y_pos   int,
    z_pos   int,
    primary key (npc_id)
);
create table talked_to_npc (
    uuid char(36),
    npc_id int,
    timesTalkedTo int,
    primary key (uuid, npc_id),
    foreign key (uuid) references player (uuid),
    foreign key (npc_id) references npc (npc_id)
);
create table bank (
    uuid char (36),
    balance int,
    primary key (uuid),
    foreign key (uuid) references player (uuid)
);
create table kills (
  killer    char (36),
  victim    char (36),
  timestamp char (19),
  primary key (killer, victim, timestamp),
  foreign key (killer) references player (uuid),
  foreign key (victim) references player (uuid)
);
create table quest (
    name      varchar(32),
    uuid      char(36),
    timestamp char(19),
    primary key (name, uuid),
    foreign key (uuid) references player (uuid)
);
create table convergence (
       uuid      char(36),
       hash_id       int,
       primary key (uuid, hash_id),
       foreign key (uuid) references player (uuid)
);
create table npc_talks (
       uuid char(36),
       npc_name varchar (32),
       timesTalkedTo int,
       primary key (uuid, npc_name),
       foreign key (uuid) references player (uuid)
);
create table dungeon (
    dungeon varchar (32),
    uuid char(36),
    timestamp char(19),
    length int,
    difficulty int,
    won bit,
    primary key (dungeon, uuid, timestamp),
    foreign key (uuid) references player (uuid)
);